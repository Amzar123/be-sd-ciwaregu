openapi: 3.0.0

info:
  title: "API Spec SD Ciwaregu Website"
  description : "Dokumentasi API Spec untuk website SD Ciwaregu"
  version: "1.0.0"
  license:
    name: SD Ciwaregu license
    url: "sd-ciwaregu.sch.id/api/v1"

tags:
  - name: Authentication
    description: "Login & Register"
  - name: user
    description: ""

paths:
  #endpoint register
  /register:
    post:
      tags:
        - Authentication
      summary: "Endpoint Register for new user"
      requestBody:
        required: true 
        $ref: '#/components/requestBodies/registerRequestBody'
      responses:
        200:
          description: Register Success
          $ref: '#/components/responses/registerResponse'
        500:
          description: Register Error
          $ref: '#/components/responses/serverError'
  
  #endpoint login
  /login:
    post:
      tags:
        - Authentication
      summary: "Endpoint login for user"
      requestBody:
        required: true
        $ref: '#/components/requestBodies/loginRequestBody'
      responses:
        '200':
          $ref: '#/components/responses/authenticationTokenResponse'
        '500':
          $ref: '#/components/responses/serverError'

  #endpoint get galleries
  /galleries:
    get:
      tags:
        - user
      summary: "Endpoint while user request list gallery"
      responses:
        200:
          $ref: '#/components/responses/getGalleriesResponse'
        500:
          $ref: '#/components/responses/serverError'


components:
  #Schema Components
  schemas:
    #base response schema
    baseResponseSchema:
      type: object
      properties:
        version:
          type: integer
          description: "version of API"
        success:
          type: boolean
          description: "true/false"
        data:
          type: object
          description: "Data repsonse"
      required:
        - version
        - success
        - data
      example:
        version: 1
        success: true
        data: {}

    #Schema for user responses
    userResponseSchema:
      type: object
      properties:
        message:
          type: string
          description: "response message"
        email:
          type: string
          description: "email registered user"
        password:
          type: string
          description: "password registered user"
      example:
        message: "Method Success"
        email : "asdghjk@gmail.com"
        password: "asdfghjk"

    # error schema 
    errorSchema:
      type: object
      properties:
        object:
          type: string
        code:
          type: string
        description:
          type: string
        messages:
          type: object
      example:
        object: "error"
        code: "server:internal_server_error"
        description: "Server error"
        messages: {"error_key": "error_reason"}
    
    # schema for register user
    registerResponseSchema:
      allOf:
        - $ref: '#/components/schemas/baseResponseSchema'
        - type: object
          properties:
            data:
              type: object
              $ref: '#/components/schemas/userResponseSchema'
          example:
            version: 1
            success: true
            data:
              message: "Method Success"
              email : "asdghjk@gmail.com"
              password: "asdfghjk"

    # schema for user login        
    loginResponseSchema:
      allOf:
        - $ref: '#/components/schemas/baseResponseSchema'
        - type: object
          properties:
            data:
              type: object
              $ref: '#/components/schemas/authenticationTokenSchema'
          required: 
            - data
          example:
            data:
              object: "authentication_token"
              user_id: "1"
              authentication_token: "azJRj09l7jvR8KhTqUs3"
    
    #get list of gallery
    getGalleriesResponseSchema:
      allOf:
        - $ref: '#/components/schemas/baseResponseSchema'
        - type: object
          properties:
            data:
              type: object
              allOf:
                - $ref: '#/components/schemas/unpaginatedListSchema'
                - type: object
                  properties:
                    data:
                      type: array
                      items:
                        $ref: '#/components/schemas/gallerySchema'
          example:
            data:
              listImage:
              - imageUrl: "https://image.io/9929"
                title: "Photos"
                description: "Good Photos"
                createdAt: "02-02-2022"
                updateAt: "02-03-2023"
              - imageUrl: "https://image.io/1009"
                title: "Photos 2"
                description: "Better Photos"
                createdAt: "02-02-2023"
                updateAt: "02-03-2024"

    # server error schema for response
    serverErrorResponse:
      allOf:
        - $ref: '#/components/schemas/baseResponseSchema'
        - type: object
          properties:
            data:
              $ref: '#/components/schemas/errorSchema'
          example:
            success: false
            data:
              object: "error"
              code: "server:internal_server_error"
              description: "Server error"
              messages: {"error_key": "error_reason"}

    # schema for authentication data while user login
    authenticationTokenSchema:
      type: object
      properties:
        object:
          type: string
        user_id:
          type: string
        authentication_token:
          type: string
      required:
        - object
        - user_id
        - authentication_token

    # single object gallery schema
    gallerySchema:
      type: object
      properties:
        imageUrl: 
          type: string
        title: 
          type: string
        description: 
          type: string
        createdAt:
          type: string
        updateAt:
          type: string

    # Schema for a list object
    unpaginatedListSchema:
      type: object
      properties:
        data:
          type: array
      required:
        - data
      example:

  #Request Body Component
  requestBodies:

    #request body for register
    registerRequestBody:
      required: true
      content:
        application/x-www-form-urlencoded:
          schema:
            properties:
              name:
                type: string
                description: nama user
              password:
                type: string
                description: password user
              imageUrl:
                type: string
                description: link foto profil user
              email:
                type: string
                description: email user
              address:
                type: string
                description: alamat user
              birthDate:
                type:  string
                description: tanggal lahir user
            example:
              name: "user"
              password: "password"
              imageUrl: "https://asdfghjkl.com"
              email: "asdfgh45@gmail.com"
              address: "bandung"
              birthDate: "02/02/2022"
    
    #request body for login
    loginRequestBody:
      required: true
      content:
        application/x-www-form-urlencoded:
          schema:
            properties:
              email:
                type: string
                description: email user
              password:
                type: string
                description: password user
            example:
              email: "john.doe@example.com"
              password: "password"
  
  #Responses Components
  responses:
    registerResponse:
      description: Register Success Response
      content:
        application/vnd.sd-ciwaregu.v1+json:
          schema:
            $ref: '#/components/schemas/registerResponseSchema'

    serverError:
      description: Server Error
      content:
        application/vnd.sd-ciwaregu.v1+json:
          schema:
            $ref: '#/components/schemas/serverErrorResponse'

    authenticationTokenResponse:
      description: Login Authentication token response
      content:
        application/vnd.sd-ciwaregu.v1+json:
          schema:
            $ref: '#/components/schemas/loginResponseSchema'

    getGalleriesResponse:
      description: Get List of Gallery response
      content:
        application/vnd.sd-ciwaregu.v1:
          schema:
            $ref: '#/components/schemas/getGalleriesResponseSchema'